{
  "version": 3,
  "sources": ["../../classnames/index.js", "../../react-vertical-timeline-component/dist-es6/VerticalTimeline.js", "../../src/observe.ts", "../../src/InView.tsx", "../../src/useInView.tsx", "../../react-vertical-timeline-component/dist-es6/VerticalTimelineElement.js", "../../react-vertical-timeline-component/dist-es6/index.js"],
  "sourcesContent": ["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n", "\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst VerticalTimeline = ({\n  animate = true,\n  className = '',\n  layout = '2-columns',\n  lineColor = '#FFF',\n  children\n}) => {\n  if (typeof window === 'object') {\n    document.documentElement.style.setProperty('--line-color', lineColor);\n  }\n\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: (0, _classnames.default)(className, 'vertical-timeline', {\n      'vertical-timeline--animate': animate,\n      'vertical-timeline--two-columns': layout === '2-columns',\n      'vertical-timeline--one-column-left': layout === '1-column' || layout === '1-column-left',\n      'vertical-timeline--one-column-right': layout === '1-column-right'\n    })\n  }, children);\n};\n\nVerticalTimeline.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]).isRequired,\n  className: _propTypes.default.string,\n  animate: _propTypes.default.bool,\n  layout: _propTypes.default.oneOf(['1-column-left', '1-column', '2-columns', '1-column-right']),\n  lineColor: _propTypes.default.string\n};\nvar _default = VerticalTimeline;\nexports.default = _default;", "import { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n", "import * as React from 'react';\nimport { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  static displayName = 'InView';\n  static defaultProps = {\n    threshold: 0,\n    triggerOnce: false,\n    initialInView: false,\n  };\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n", "import * as React from 'react';\nimport { InViewHookResponse, IntersectionOptions } from './index';\nimport { useEffect } from 'react';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n  const setRef = React.useCallback(\n    (node: Element | null) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n          fallbackInView,\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n", "\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactIntersectionObserver = require(\"react-intersection-observer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst VerticalTimelineElement = ({\n  children = '',\n  className = '',\n  contentArrowStyle = null,\n  contentStyle = null,\n  date = '',\n  dateClassName = '',\n  icon = null,\n  iconClassName = '',\n  iconOnClick = null,\n  onTimelineElementClick = null,\n  iconStyle = null,\n  id = '',\n  position = '',\n  style = null,\n  textClassName = '',\n  intersectionObserverProps = {\n    rootMargin: '0px 0px -40px 0px',\n    triggerOnce: true\n  },\n  visible = false\n}) => /*#__PURE__*/_react.default.createElement(_reactIntersectionObserver.InView, intersectionObserverProps, ({\n  inView,\n  ref\n}) => /*#__PURE__*/_react.default.createElement(\"div\", {\n  ref: ref,\n  id: id,\n  className: (0, _classnames.default)(className, 'vertical-timeline-element', {\n    'vertical-timeline-element--left': position === 'left',\n    'vertical-timeline-element--right': position === 'right',\n    'vertical-timeline-element--no-children': children === ''\n  }),\n  style: style\n}, /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"span\", {\n  // eslint-disable-line jsx-a11y/no-static-element-interactions\n  style: iconStyle,\n  onClick: iconOnClick,\n  className: (0, _classnames.default)(iconClassName, 'vertical-timeline-element-icon', {\n    'bounce-in': inView || visible,\n    'is-hidden': !(inView || visible)\n  })\n}, icon), /*#__PURE__*/_react.default.createElement(\"div\", {\n  style: contentStyle,\n  onClick: onTimelineElementClick,\n  className: (0, _classnames.default)(textClassName, 'vertical-timeline-element-content', {\n    'bounce-in': inView || visible,\n    'is-hidden': !(inView || visible)\n  })\n}, /*#__PURE__*/_react.default.createElement(\"div\", {\n  style: contentArrowStyle,\n  className: \"vertical-timeline-element-content-arrow\"\n}), children, /*#__PURE__*/_react.default.createElement(\"span\", {\n  className: (0, _classnames.default)(dateClassName, 'vertical-timeline-element-date')\n}, date)))));\n\nVerticalTimelineElement.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),\n  className: _propTypes.default.string,\n  contentArrowStyle: _propTypes.default.shape({}),\n  contentStyle: _propTypes.default.shape({}),\n  date: _propTypes.default.node,\n  dateClassName: _propTypes.default.string,\n  icon: _propTypes.default.element,\n  iconClassName: _propTypes.default.string,\n  iconStyle: _propTypes.default.shape({}),\n  iconOnClick: _propTypes.default.func,\n  onTimelineElementClick: _propTypes.default.func,\n  id: _propTypes.default.string,\n  position: _propTypes.default.string,\n  style: _propTypes.default.shape({}),\n  textClassName: _propTypes.default.string,\n  visible: _propTypes.default.bool,\n  intersectionObserverProps: _propTypes.default.shape({\n    root: _propTypes.default.object,\n    rootMargin: _propTypes.default.string,\n    threshold: _propTypes.default.number,\n    triggerOnce: _propTypes.default.bool\n  })\n};\nvar _default = VerticalTimelineElement;\nexports.default = _default;", "\"use strict\";\n\n// this should be the entry point to your library\nmodule.exports = {\n  VerticalTimeline: require('./VerticalTimeline').default,\n  // eslint-disable-line global-require\n  VerticalTimelineElement: require('./VerticalTimelineElement').default // eslint-disable-line global-require\n\n};"],
  "mappings": "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",
  "names": ["defaultFallbackInView", "inView", "unsupportedValue", "getRootId", "root", "RootIds", "has", "get", "rootId", "set", "toString", "optionsToId", "options", "Object", "keys", "sort", "filter", "key", "undefined", "map", "createObserver", "id", "instance", "observerMap", "elements", "Map", "thresholds", "observer", "IntersectionObserver", "entries", "forEach", "entry", "isIntersecting", "some", "threshold", "intersectionRatio", "trackVisibility", "isVisible", "target", "callback", "Array", "isArray", "observe", "element", "fallbackInView", "window", "bounds", "getBoundingClientRect", "time", "boundingClientRect", "intersectionRect", "rootBounds", "callbacks", "push", "unobserve", "splice", "indexOf", "length", "size", "disconnect", "isPlainChildren", "props", "children", "useInView", "delay", "rootMargin", "triggerOnce", "skip", "initialInView", "useRef", "React", "useState", "state", "setState", "setRef", "useCallback", "node", "current", "useEffect", "result", "ref", "InView", "WeakMap", "_unobserveCb", "handleNode", "observeNode", "handleChange", "onChange", "componentDidUpdate", "prevProps", "componentWillUnmount", "render", "as", "createElement", "Component", "displayName", "defaultProps"]
}
