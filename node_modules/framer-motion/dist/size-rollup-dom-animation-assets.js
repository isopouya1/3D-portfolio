const t="undefined"!=typeof document;function e(t){return"object"==typeof t&&Object.prototype.hasOwnProperty.call(t,"current")}function a(t){return"string"==typeof t||Array.isArray(t)}function r(t){return"object"==typeof t&&"function"==typeof t.start}const n=["animate","whileInView","whileFocus","whileHover","whileTap","whileDrag","exit"],s=["initial",...n];function o(t){return r(t.animate)||s.some(e=>a(t[e]))}function i(t){return Boolean(o(t)||t.variants)}const f={animation:["animate","exit","variants","whileHover","whileTap","whileFocus","whileDrag","whileInView"],exit:["exit"],drag:["drag","dragControls"],focus:["whileFocus"],hover:["whileHover","onHoverStart","onHoverEnd"],tap:["whileTap","onTap","onTapStart","onTapCancel"],pan:["onPan","onPanStart","onPanSessionStart","onPanEnd"],inView:["whileInView","onViewportEnter","onViewportLeave"],layout:["layout","layoutId"]},l={};for(const t in f)l[t]={isEnabled:e=>f[t].some(t=>!!e[t])};const c=["animate","circle","defs","desc","ellipse","g","image","line","filter","marker","mask","metadata","path","pattern","polygon","polyline","rect","stop","switch","symbol","svg","text","tspan","use","view"];function d(t){return"string"==typeof t&&!t.includes("-")&&!!(c.indexOf(t)>-1||/[A-Z]/.test(t))}const p={},u=["transformPerspective","x","y","z","translateX","translateY","translateZ","scale","scaleX","scaleY","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY"],g=new Set(u);function h(t,{layout:e,layoutId:a}){return g.has(t)||t.startsWith("origin")||(e||void 0!==a)&&(!!p[t]||"opacity"===t)}const m=t=>Boolean(t&&t.getVelocity),y={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"},v=u.length;const w=t=>e=>"string"==typeof e&&e.startsWith(t),b=w("--"),x=w("var(--"),k=(t,e)=>e&&"number"==typeof t?e.transform(t):t,L=(t,e,a)=>Math.min(Math.max(a,t),e),O={test:t=>"number"==typeof t,parse:parseFloat,transform:t=>t},T={...O,transform:t=>L(0,1,t)},X={...O,default:1},Y=t=>Math.round(1e5*t)/1e5,$=/(-)?([\d]*\.?[\d])+/g,B=/(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,A=/^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;function P(t){return"string"==typeof t}const S=t=>({test:e=>P(e)&&e.endsWith(t)&&1===e.split(" ").length,parse:parseFloat,transform:e=>`${e}${t}`}),W=S("deg"),Z=S("%"),R=S("px"),C=S("vh"),H=S("vw"),V={...Z,parse:t=>Z.parse(t)/100,transform:t=>Z.transform(100*t)},j={...O,transform:Math.round},z={borderWidth:R,borderTopWidth:R,borderRightWidth:R,borderBottomWidth:R,borderLeftWidth:R,borderRadius:R,radius:R,borderTopLeftRadius:R,borderTopRightRadius:R,borderBottomRightRadius:R,borderBottomLeftRadius:R,width:R,maxWidth:R,height:R,maxHeight:R,size:R,top:R,right:R,bottom:R,left:R,padding:R,paddingTop:R,paddingRight:R,paddingBottom:R,paddingLeft:R,margin:R,marginTop:R,marginRight:R,marginBottom:R,marginLeft:R,rotate:W,rotateX:W,rotateY:W,rotateZ:W,scale:X,scaleX:X,scaleY:X,scaleZ:X,skew:W,skewX:W,skewY:W,distance:R,translateX:R,translateY:R,translateZ:R,x:R,y:R,z:R,perspective:R,transformPerspective:R,opacity:T,originX:V,originY:V,originZ:R,zIndex:j,fillOpacity:T,strokeOpacity:T,numOctaves:j};function F(t,e,a,r){const{style:n,vars:s,transform:o,transformOrigin:i}=t;let f=!1,l=!1,c=!0;for(const t in e){const a=e[t];if(b(t)){s[t]=a;continue}const r=z[t],d=k(a,r);if(g.has(t)){if(f=!0,o[t]=d,!c)continue;a!==(r.default||0)&&(c=!1)}else t.startsWith("origin")?(l=!0,i[t]=d):n[t]=d}if(e.transform||(f||r?n.transform=function(t,{enableHardwareAcceleration:e=!0,allowTransformNone:a=!0},r,n){let s="";for(let e=0;e<v;e++){const a=u[e];if(void 0!==t[a]){s+=`${y[a]||a}(${t[a]}) `}}return e&&!t.z&&(s+="translateZ(0)"),s=s.trim(),n?s=n(t,r?"":s):a&&r&&(s="none"),s}(t.transform,a,c,r):n.transform&&(n.transform="none")),l){const{originX:t="50%",originY:e="50%",originZ:a=0}=i;n.transformOrigin=`${t} ${e} ${a}`}}function I(t,e,a){return"string"==typeof t?t:R.transform(e+a*t)}const D={offset:"stroke-dashoffset",array:"stroke-dasharray"},E={offset:"strokeDashoffset",array:"strokeDasharray"};function M(t,{attrX:e,attrY:a,originX:r,originY:n,pathLength:s,pathSpacing:o=1,pathOffset:i=0,...f},l,c,d){if(F(t,f,l,d),c)return void(t.style.viewBox&&(t.attrs.viewBox=t.style.viewBox));t.attrs=t.style,t.style={};const{attrs:p,style:u,dimensions:g}=t;p.transform&&(g&&(u.transform=p.transform),delete p.transform),g&&(void 0!==r||void 0!==n||u.transform)&&(u.transformOrigin=function(t,e,a){return`${I(e,t.x,t.width)} ${I(a,t.y,t.height)}`}(g,void 0!==r?r:.5,void 0!==n?n:.5)),void 0!==e&&(p.x=e),void 0!==a&&(p.y=a),void 0!==s&&function(t,e,a=1,r=0,n=!0){t.pathLength=1;const s=n?D:E;t[s.offset]=R.transform(-r);const o=R.transform(e),i=R.transform(a);t[s.array]=`${o} ${i}`}(p,s,o,i,!1)}const q=t=>"string"==typeof t&&"svg"===t.toLowerCase(),N=t=>t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();function U(t,{style:e,vars:a},r,n){Object.assign(t.style,e,n&&n.getProjectionStyles(r));for(const e in a)t.style.setProperty(e,a[e])}const G=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox","gradientTransform","pathLength","startOffset","textLength","lengthAdjust"]);function J(t,e,a,r){U(t,e,void 0,r);for(const a in e.attrs)t.setAttribute(G.has(a)?a:N(a),e.attrs[a])}function K(t,e){const{style:a}=t,r={};for(const n in a)(m(a[n])||e.style&&m(e.style[n])||h(n,t))&&(r[n]=a[n]);return r}function Q(t,e){const a=K(t,e);for(const r in t)if(m(t[r])||m(e[r])){a["x"===r||"y"===r?"attr"+r.toUpperCase():r]=t[r]}return a}function _(t,e,a,r={},n={}){return"function"==typeof e&&(e=e(void 0!==a?a:t.custom,r,n)),"string"==typeof e&&(e=t.variants&&t.variants[e]),"function"==typeof e&&(e=e(void 0!==a?a:t.custom,r,n)),e}const tt=t=>Array.isArray(t),et=t=>Boolean(t&&"object"==typeof t&&t.mix&&t.toValue),at=t=>tt(t)?t[t.length-1]||0:t;export{B as A,z as B,R as C,W as D,H as E,C as F,at as G,N as H,g as I,n as J,tt as K,x as L,u as M,s as N,b as O,U as P,G as Q,e as a,o as b,a as c,m as d,h as e,l as f,F as g,M as h,t as i,q as j,d as k,et as l,i as m,r as n,J as o,K as p,P as q,_ as r,Q as s,A as t,$ as u,Y as v,T as w,O as x,L as y,Z as z};
